@{
    ViewBag.Title = "Замена старого пароля на новый";
    Layout = null;
}
@model Podelka.Models.ResetPasswordModel
<!doctype html>
<html>
<head>
    <meta charset="windows-1251">
    <meta name="viewport" content="width=400">
    <title>Поделка.by | Уникальный каталог изделий ручной работы</title>
    <link rel="stylesheet" href="@Url.Content("~/Content/css/font-awesome.css")">
    <link href="@Url.Content("http://fonts.googleapis.com/css?family=PT+Sans:400,700,400italic,700italic&subset=latin,cyrillic")" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/Content/css/login.css")">
    
    @Scripts.Render("~/bundles/jqueryMin_main")
    @Scripts.Render("~/bundles/jqueryValidate")
</head>
<body>
    <div id="bg">
        <img src="@Url.Content("~/Content/img/registr.jpg")" alt="" />
    </div>
    <div class="container" id="container">
        <h3>Восстановление забытого пароля</h3>
        <div id="regForm">
            @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                <p class="input-data">Введите новый пароль:</p>
                @Html.ValidationSummary(true, String.Empty, new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Code)
                <div class="block-input">
                    <div class="block-icon">
                        <i class="fa fa-ml fa-envelope"></i>
                    </div>
                    @Html.TextBoxFor(m => m.Email, new { type = "email", id = "mail", placeholder = Html.DisplayNameFor(m => m.Email) })
                    @Html.ValidationMessageFor(m => m.Email, String.Empty, new { @class = "text-danger" })
                </div>
                <div class="block-input">
                    <div class="block-icon">
                        <i class="fa fa-lg fa-unlock-alt"></i>
                    </div>
                    @Html.PasswordFor(m => m.Password, new { id = "password", placeholder = Html.DisplayNameFor(m => m.Password) })
                    @Html.ValidationMessageFor(m => m.Password, String.Empty, new { @class = "text-danger" })
                </div>
                <div class="block-input">
                    <div class="block-icon">
                        <i class="fa fa-lg fa-lock"></i>
                    </div>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { id = "podpass", placeholder = Html.DisplayNameFor(m => m.ConfirmPassword) })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, String.Empty, new { @class = "text-danger" })
                </div>
                <input type="submit" name="login" value="Продолжить"><br />
            }
</div>
    </div>
</body>
</html>